group 'F1'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'idea'

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                'Implementation-Version': version,
                'Main-Class': 'Race.Race'
    }
}
idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

jacoco {
    toolVersion = '0.7.1.201405082137'
    reportsDir = file("$buildDir/reports/jacoco")
}


jacocoTestReport {
    group = 'Reporting'
    description = 'Generate Jacoco coverage reports after running tests.'

    reports {
        xml.enabled true
        csv.enabled false
        html.destination "${buildDir}/reports/jacoco/html"
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['Race/Main*'
                    ])
        })
    }
}

sourceCompatibility = 1.5

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url 'http://repository.jboss.org/nexus/content/groups/public-jboss' }
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

[compileJava, compileTestJava]*.options*.compilerArgs = ["-Xlint:-serial", "-Xlint:deprecation"]

task( run, dependsOn: jar, type: JavaExec ) {
    main = 'Race.Main'
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
}

dependencies {
    compile "org.mockito:mockito-all:1.9.5"
    compile "org.projectlombok:lombok:1.16.4"
    compile "com.jayway.jsonpath:json-path:2.2.0"
    testCompile "com.jayway.jsonpath:json-path"
    testCompile 'junit:junit:4.11'
    testCompile "org.mockito:mockito-core:1.+"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}